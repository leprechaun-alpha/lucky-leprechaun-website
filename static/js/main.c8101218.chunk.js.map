{"version":3,"sources":["components/Header.js","components/Hero.js","components/About.js","components/Lottery.js","components/Gallery.js","components/helpers/Question.js","components/FAQ.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","config","id","href","src","alt","class","TWITTER","target","icon","faTwitter","DISCORD","faDiscord","onClick","document","getElementById","classList","toggle","Hero","About","x","MAX_SUPPLY","toString","replace","NUMBER_OF_LOTTERIES","Lottery","CONFIG","web3","useState","ethPrice","setEthPrice","winnerTiers","distributionSchedule","formatter","Intl","NumberFormat","style","currency","getEthPrice","a","CoinGeckoClient","CoinGecko","simple","price","ids","vs_currencies","data","ethereum","usd","console","log","useEffect","DISPLAY_COST","PAYOUT_RATIO","updatePrices","then","innerHTML","format","totalWinnings","i","length","el","percentWon","updateTableData","className","fontSize","colSpan","Gallery","Question","question","answer","e","closest","nextElementSibling","plus","children","minus","display","faPlus","faMinus","FAQ","Footer","App","require","abi","Web3","eth","Contract","CONTRACT_ADDRESS","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c8101218.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Header = ({ config }) => {\n\n    const burgerClick = () => {\n        document.getElementById(\"burger-menu\").classList.toggle(\"open\")\n        document.getElementById(\"burger-links\").classList.toggle(\"show\")\n    }\n\n    return (\n        <div id=\"header-container\">\n            <div id=\"header\">\n                <div id=\"left-header\">\n                    <a href=\"#\"><img id=\"logo\" src=\"/leprechauns/orange_beard.png\" alt=\"leprechaun\" /></a>\n                </div>\n                <div id=\"right-header-container\">\n                    <div id=\"right-header\">\n                        <ul id=\"header-page-links\">\n                            <li id=\"mint-button\"><a>Mint</a></li>\n                            <li class=\"border-link hover-pointer\"><a href=\"#lottery-info\">Lottery</a></li>\n                            <li class=\"hover-pointer\"><a href=\"#faq\">FAQ</a></li>\n                        </ul>\n                        <ul id=\"header-external-links\" class=\"hover-pointer\">\n                            <li><a href={config.TWITTER} target=\"_blank\"><FontAwesomeIcon icon={faTwitter} /></a></li>\n                            <li><a href={config.DISCORD} target=\"_blank\"><FontAwesomeIcon icon={faDiscord} /></a></li>\n                        </ul>\n                    </div>\n                    <div id=\"burger-menu\" onClick={burgerClick}>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </div>\n            </div>\n            <div id=\"burger-links\">\n                <ul id=\"header-page-links\">\n                    <li id=\"mint-button\"><a>Mint</a></li>\n                    <li class=\"border-link hover-pointer\"><a href=\"#lottery-info\">Lottery</a></li>\n                    <li class=\"hover-pointer\"><a href=\"#faq\">FAQ</a></li>\n                    <li class=\"burger-external-links hover-pointer\"><a href={config.TWITTER} target=\"_blank\"><FontAwesomeIcon icon={faTwitter} /></a></li>\n                    <li class=\"burger-external-links hover-pointer\"><a href={config.DISCORD} target=\"_blank\"><FontAwesomeIcon icon={faDiscord} /></a></li>\n                </ul>\n            </div>\n\n\n        </div>\n    )\n}\nexport default Header;","import React from 'react';\nimport './Hero.scss';\n\n\nconst Hero = () => (\n    <div id=\"hero\" class=\"section\">\n        <div id=\"hero-text-section\">\n            <h1 class=\"header-text\">The future of permissionless NFT <span class=\"orange\">lotteries</span> has arrived.</h1>\n        </div>\n\n        {/* <h1 class=\"header-text\">And they're Irish.</h1> */}\n        <div id=\"hero-image-section\">\n           {/* <img class=\"hero-image\" src=\"/leprechauns/1.png\" alt=\"leprechaun\"/>\n            <img class=\" hero-image hero-image-main\" src=\"/leprechauns/10.png\"  alt=\"leprechaun\"/>\n            <img class=\"hero-image\" src=\"/leprechauns/25.png\"  alt=\"leprechaun\"/>\n            {/* <img src=\"/leprechauns/Hero-01.png\"/> */}\n            <img src=\"/leprechauns/hero-5.png\" id=\"hero-mainimg-5\" class=\"hero-mainimg\"/>\n            <img src=\"/leprechauns/hero-3.png\" id=\"hero-mainimg-3\" class=\"hero-mainimg\"/>\n        </div>\n        <div id=\"mint-btn\" class=\"border-link\">Mint</div>\n\n    </div>\n)\nexport default Hero;","import React from 'react';\nimport './About.scss';\n\n\nconst About = ({config}) => { \n    const format = (x) => {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");        \n    }\n    return(\n    <div id=\"about\" class=\"section\">\n        <div id=\"about-text\">\n            <p class=\"paragraph-medium\">\n                Lucky Leprechauns is a collection of <span class=\"white\">{format(config.MAX_SUPPLY)} NFTs</span> on the Ethereum blockchain, with each LEP being\n                a combination of hundreds of attributes ensuring uniqueness among the collection.\n            </p>\n            <p class=\"paragraph-medium\">\n                Holding a LEP will give the owner exclusive access to a <span class=\"orange strong\">weekly lottery</span>, in which over the course of {config.NUMBER_OF_LOTTERIES} weeks, 50% of the minting revenue will be distributed to holders.\n                This lottery mechanism is enforced <span class=\"white\">via code</span> so that each lottery is distributed fairly and as promised.\n            </p>\n        </div>\n        <div id=\"about-img\">\n            <img src=\"/leprechauns/about-lep.png\" alt=\"leprechaun\"/>\n        </div>\n    </div>\n)}\nexport default About;","import React, { useEffect, useState } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport './Lottery.scss';\nimport * as CoinGecko from \"coingecko-api\"\n\nconst Lottery = ({ CONFIG, web3 }) => {\n    const [ethPrice, setEthPrice] = useState(4500)\n    const winnerTiers = [1, 1, 1, 7, 40, 200]\n    const distributionSchedule = [0.15, 0.10, 0.05, 0.02, 0.0065, 0.0015]\n    let formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n\n    const getEthPrice = async () => {\n        try {\n            const CoinGeckoClient = new CoinGecko();\n            let data = await CoinGeckoClient.simple.price({\n                ids: ['ethereum'],\n                vs_currencies: ['usd'],\n            })\n            setEthPrice(data.data.ethereum.usd)\n            return ethPrice\n        } catch (e) {\n            console.log(e);\n            return ethPrice\n        }\n    }\n    const updateTableData = (totalWinnings) => {\n        for (let i = 1; i <= winnerTiers.length; i++) {\n            let el = document.getElementById(`row-winnings-${i}`)\n            let percentWon = distributionSchedule[i - 1];\n            el.innerHTML = formatter.format(percentWon * totalWinnings)\n        }\n    }\n\n    const showMore = (e) => {\n        let el = e.target;\n        console.log(el.classList)\n        el.classList.toggle(\"active\");\n        let content = el.nextElementSibling;\n        if (content.style.display === \"block\") {\n            content.style.display = \"none\";\n            el.style.borderRadius = \"1rem\"\n        } else {\n            content.style.display = \"block\";\n            el.style.borderRadius = \"1rem 1rem 0 0\"\n        }\n    }\n\n    useEffect(() => {\n        const updatePrices = async () => {\n            let ethPrice = await getEthPrice()\n            return ethPrice * CONFIG.MAX_SUPPLY * CONFIG.DISPLAY_COST * CONFIG.PAYOUT_RATIO\n        }\n\n        updatePrices().then(x => {\n            document.getElementById(\"distribution-weekly\").innerHTML = formatter.format(x / CONFIG.NUMBER_OF_LOTTERIES)\n            document.getElementById(\"distribution-total\").innerHTML = formatter.format(x)\n            updateTableData(x / CONFIG.NUMBER_OF_LOTTERIES)\n        })\n    })\n\n    return (\n        <div className=\"section\" id=\"lottery\">\n            <div id=\"lottery-section-top\" class=\"lottery-section\">\n                <div class=\"lottery-stats\">\n                    <div id=\"distribution-total-section\" class=\"lottery-stats-subsection\">\n                        <h2 class=\"white strong lottery-stats-text\">Expected Distribution to LEP Holders:</h2>\n                        <div id=\"distribution-total\" class=\"strong lottery-stats-number\"></div>\n                    </div>\n                    <div id=\"distribution-weekly-section\" class=\"lottery-stats-subsection\">\n                        <h2 class=\"white strong lottery-stats-text\">Weekly Distribution:</h2>\n                        <div id=\"distribution-weekly\" class=\"strong lottery-stats-number\"></div>\n\n                    </div>\n                </div>\n                <p>Estimated assuming a mint sellout and an ETH price of {formatter.format(ethPrice)}</p>\n            </div>\n\n            <div id=\"lottery-info\" class=\"lottery-section\">\n                <div id=\"lottery-about\">\n                    <h1 class=\"white strong\">The Lottery Mechanism <span class=\"orange strong\"></span></h1>\n                    <ol>\n                        <li><span>50% of minting revenue is locked in a smart contract</span></li>\n                        <li><span>The smart contract executes a lottery function at a set time, every week for {CONFIG.NUMBER_OF_LOTTERIES} weeks using <span class=\"white\">Chainlink Keepers</span></span></li>\n                        <li><span>Winners are chosen at random using <span class=\"white\">Chainlink's VRF</span> - see the table below for the number of winners and the distribution schedule</span></li>\n                        <li><span>Only Lucky Leprechaun holders can participate in the lottery</span></li>\n                        <li><span>The number of entries each holder receives is dependent on the <span class=\"white lottery-info-subsection\">number of days they have held</span>, and whether or not they <span class=\"white lottery-info-subsection\">minted their LEP</span></span></li>\n                        {/*                         <li class=\"bullet\"><span>This lottery mechanism is verifiable on Etherscan and uses Chainlink VRF and Chainlink Keepers to execute at a certian time and ensure validity of randomness</span></li>\n */}                    </ol>\n                </div>\n                <div id=\"lottery-entry\">\n                    <div>\n                        <h3>How many entries do I get?</h3>\n                        <p class=\"left-text\">For every day you hold, you recieve 1 more entry to the lottery. A maximum of 7 can be attained by each LEP.</p>\n                    </div>\n                    <div>\n                        <h3 class=\"orange\">Minting doubles your chance of winning</h3>\n                        <p class=\"left-text\">If the current holder of the LEP is the same address as the one who minted it then that LEP receives double the entries</p>\n                    </div>\n                    <div id=\"div-entry-table\">\n                        <table id=\"entry-table\">\n                            <thead>\n                                <tr>\n                                    <td style={{fontSize: \"small\"}}>Entries</td>\n                                    <th colSpan=\"8\">Days held</th>\n                                </tr>\n                                <tr>\n                                    <th></th>\n                                    <th>&lt;1</th>\n                                    <th>1</th>\n                                    <th>2</th>\n                                    <th>3</th>\n                                    <th>4</th>\n                                    <th>5</th>\n                                    <th>6</th>\n                                    <th><span class=\"orange\">7+</span></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th>Did not mint</th>\n                                    <td>0</td>\n                                    <td>1</td>\n                                    <td>2</td>\n                                    <td>3</td>\n                                    <td>4</td>\n                                    <td>5</td>\n                                    <td>6</td>\n                                    <td>7</td>\n                                </tr>\n                                <tr>\n                                    <th><span class=\"orange\">Minted</span></th>\n                                    <td>0</td>\n                                    <td>2</td>\n                                    <td>4</td>\n                                    <td>6</td>\n                                    <td>8</td>\n                                    <td>10</td>\n                                    <td>12</td>\n                                    <td><span class=\"orange strong\">14</span></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n            </div>\n            <div id=\"lottery-section-bottom\" class=\"lottery-section\">\n                <div id=\"lottery-prize-pool-section\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Place</th>\n                                <th>% of Prize Pool Won</th>\n                                <th>Estimated Winnings</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th>1</th>\n                                <td>15%</td>\n                                <td id=\"row-winnings-1\"></td>\n                            </tr>\n                            <tr>\n                                <th>2</th>\n                                <td>10%</td>\n                                <td id=\"row-winnings-2\"></td>\n                            </tr>\n                            <tr>\n                                <th>3</th>\n                                <td>5%</td>\n                                <td id=\"row-winnings-3\"></td>\n                            </tr>\n                            <tr>\n                                <th>4-10</th>\n                                <td>2%</td>\n                                <td id=\"row-winnings-4\"></td>\n                            </tr>\n                            <tr>\n                                <th>11-50</th>\n                                <td>0.65%</td>\n                                <td id=\"row-winnings-5\"></td>\n                            </tr>\n                            <tr>\n                                <th>51-250</th>\n                                <td>0.15%</td>\n                                <td id=\"row-winnings-6\"></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n        </div>\n    );\n}\nexport default Lottery;","import React from 'react';\nimport './Gallery.scss';\n\n\nconst Gallery = () => {\n    return (\n        <div id=\"gallery\" class=\"section\">\n            <div id=\"slides\">\n                <div class=\"slide\" id=\"slide-1\"><img src=\"/leprechauns/gallery/8.png\" alt=\"leprechaun naughty priest\"/></div>\n                <div class=\"slide\" id=\"slide-2\"><img src=\"/leprechauns/gallery/9.png\" alt=\"leprechaun heart glasses\"/></div>\n                <div class=\"slide\" id=\"slide-3\"><img src=\"/leprechauns/gallery/7.png\" alt=\"leprechaun daytime stoned\"/></div>\n                <div class=\"slide\" id=\"slide-4\"><img src=\"/leprechauns/gallery/18.png\" alt=\"leprechaun basketball jersey\"/></div>\n                <div class=\"slide\" id=\"slide-5\"><img src=\"/leprechauns/gallery/13.png\" alt=\"leprechaun pickle referee\"/></div>\n            </div>\n            <div id=\"gallery-dots\">\n                <a href=\"#slide-2\"><span class=\"dot\"></span></a>\n                <a href=\"#slide-1\"><span class=\"dot\"></span></a>\n                <a href=\"#slide-3\"><span class=\"dot\"></span></a>\n                <a href=\"#slide-4\"><span class=\"dot\"></span></a>\n                <a href=\"#slide-5\"><span class=\"dot\"></span></a>\n            </div>\n        </div>);\n}\n\nexport default Gallery;","import React, { useEffect, useState } from 'react';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Question = ({ question, answer }) => {\n  const toggleAnswer = (e) => {\n    let el = e.target.closest(\".question\");\n    let answer = el.nextElementSibling;\n    let plus = el.children[1].children[0]\n    let minus = el.children[1].children[1]\n    if (answer.style.display === \"block\") {\n      answer.style.display = \"none\";\n      plus.style.display = \"block\"\n      minus.style.display = \"none\"\n    } else {\n      answer.style.display = \"block\";\n      plus.style.display = \"none\"\n      minus.style.display = \"block\"\n    }\n  }\n\n  return (\n    <div class=\"qa\" >\n        <div class=\"question\" onClick={toggleAnswer} >\n          <h3>{question}</h3>\n          <div class=\"icon\">\n            <FontAwesomeIcon class=\"plus\" icon={faPlus} />\n            <FontAwesomeIcon class=\"minus\" icon={faMinus} />\n          </div>\n        </div>\n      <div class=\"answer\">{answer}</div>\n    </div>\n  );\n}\n\nexport default Question;","import React from 'react';\nimport Question from './helpers/Question';\nimport './FAQ.scss';\n\n\nconst FAQ = ({ config }) => {\n    return (\n        <div id=\"faq\" class=\"section\">\n            <h1>FAQ</h1>\n            <div id=\"questions-answers\">\n                <Question question={\"What is Lucky Leprechauns?\"}\n                    answer={`Lucky Leprechaun is a collection of ${config.MAX_SUPPLY} ERC721 tokens on the Ethereum blockchain. Each NFT provides unprecdented opportunity to their holders.`} />\n                <Question question={\"When and where can I purchase a Lucky Leprechaun?\"}\n                    answer={\"Details regarding the release date will be announced on this website and on our Discord and Twitter.\"} />\n                <Question question={\"What are the benefits of minting a Lucky Leprechaun?\"}\n                    answer={\"Minting a LEP doubles a holder's chance of winning in our lottery. Please see the lottery section for more info.\"} />\n                <Question question={\"What makes this project different from all the other projects out there?\"}\n                    answer={`Lucky Leprechauns is an ambitious take on the classic 10,000 PFP NFT collection. However, instead of the creators collecting 100% of the minting revenue,\n                    Lucky Leprechauns will lock 50% of all minting funds into a Lottery contract where it will be distributed to holders on a weekly basis for ${config.NUMBER_OF_LOTTERIES} weeks.\n                    This is the first of its kind idea, and will no doubt bring unparalleled opportunity to its community members.`} />\n                <Question question={\"Is your code verified? If so, where can I see it?\"}\n                    answer={\"The Lottery contract's code is still in development. Approximately 2 weeks before our mint date we will deploy the contract and\\\n                    verify it on Etherscan. This will ensure there is enough time for our community to be confident with our project and promises before the minting phase begins.\"} />\n                <Question question={`Why only ${config.NUMBER_OF_LOTTERIES} lotteries?`}\n                    answer={\"This relatively small amount of lotteries was chosen in order to maximise the potential winnings our holders can attain.\\\n                    We believe that the initial hype brought from these lotteries, and the fact that Lucky Leprechauns is an early mover in the NFT Lottery space,\\\n                    will be substantial in ensuring the long-term success of this project.\"} />\n                <Question  question={\"What if it doesn't sell out?\"} \n                    answer={\"All NFTs that do not sell within 5 days of the minting date will be burnt forever.\"}/>\n                <Question question={\"What happens after the lotteries are all finished?\"} \n                    answer={\"Once the lotteries are finished, and the initial hype of our project has subdued we will initiate Phase 2\\\n                    of the project. This will include additional future lotteries where LEP holders will be rewarded with extra entries.\"}/>\n            </div>\n        </div>);\n}\n\nexport default FAQ;","import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter, faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport \"./Footer.scss\"\n\nconst Footer = ({config}) => {\n\n    return (\n        <div className=\"footer section\">\n            <div id=\"footer-icons\">\n                <a href=\"#\"><img src=\"/leprechauns/orange_beard.png\" id=\"footer-logo\" /></a>\n                <div id=\"footer-external-links\">\n                    <li><a href={config.TWITTER} target=\"_blank\"><FontAwesomeIcon icon={faTwitter} /></a></li>\n                    <li><a href={config.DISCORD} target=\"_blank\"><FontAwesomeIcon icon={faDiscord} /></a></li>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport About from './components/About';\n//import Mint from './components/Mint';\nimport Lottery from './components/Lottery';\n//import Rarity from './components/Rarity';\nimport Gallery from './components/Gallery';\nimport FAQ from './components/FAQ';\nimport Footer from './components/Footer';\n//import detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport './App.scss';\n\nconst App = () => {\n  const CONFIG = require(\"./config.json\")\n  const abi = require(\"./abi.json\")\n  const web3 = new Web3(\"wss://rinkeby.infura.io/ws/v3/aa8bb8a2bfe748368971347da99232b0\")\n  const contract = new web3.eth.Contract(abi, CONFIG.CONTRACT_ADDRESS)\n\n  return (\n    <div className=\"App\">\n      <Header config={CONFIG}/>\n      <Hero />\n      <About config={CONFIG}/>\n      <Lottery CONFIG={CONFIG} web3={web3}/>\n      <Gallery />\n      <FAQ config={CONFIG}/>\n      <Footer config={CONFIG}/>\n      {/* <Mint contract={contract} CONFIG={CONFIG} web3={web3}/>\n      <Rarity />\n       */}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}